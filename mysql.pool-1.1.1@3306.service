# -----------------------------------------------------------------------------
# Create a data container for the configuration volume: 
#     docker run -v /config --name volume-config.<service-name> busybox /bin/true
#
# Optional configuration volume install:
#     mkdir -p /etc/services-config/<service-name>/{mysql,supervisor}
#     cp <container-path>/etc/services-config/supervisor/supervisord.conf /etc/services-config/<service-name>/supervisor/supervisord.conf
#     cp <container-path>/etc/services-config/mysql/my.cnf /etc/services-config/<service-name>/mysql/my.cnf
#     cp <container-path>/etc/services-config/mysql/mysql-bootstrap.conf /etc/services-config/<service-name>/mysql/mysql-bootstrap.conf 
#
# To install: 
#     sudo cp <container-path>/<service-name>@<port>.service /etc/systemd/system/
#     sudo systemctl daemon-reload
#     sudo systemctl enable /etc/systemd/system/<service-name>@<port>.service
# 
# Start using: 
#     sudo systemctl restart <service-name>@<port>.service
# -----------------------------------------------------------------------------

[Unit]
Description=CentOS-6 / MySQL // pool-1.1.1
After=etcd2.service
After=docker.service
Requires=docker.service
Requires=etcd2.service

[Service]
Restart=on-failure
RestartSec=30
TimeoutStartSec=1200

# Create a data container for the configuration volume
ExecStartPre=/bin/sudo /bin/bash -c \
  "if [[ busybox != $(/usr/bin/docker images | /bin/grep -e '^busybox[ ]\{1,\}' | /bin/grep -o 'busybox') ]]; then \
    if [[ -f /var/services-packages/busybox.latest-1.0.0.tar.xz ]]; then \
      /usr/bin/xz /var/services-packages/busybox.latest-1.0.0.tar.xz | /usr/bin/docker load; \
    else \
      /usr/bin/docker pull busybox:latest; \
    fi; \
  fi; \
  if [[ -n $(/usr/bin/find /etc/services-config/%p/supervisor -maxdepth 1 -type f) ]] && [[ -n $(/usr/bin/find /etc/services-config/%p/mysql -maxdepth 1 -type f) ]]; then \
    if [[ volume-config.%p != $(/usr/bin/docker ps -a | /bin/awk -v pattern='^volume-config.%p$' '$NF ~ pattern { print $NF; }') ]]; then \
      /usr/bin/docker run \
        --name volume-config.%p \
        -v /etc/services-config/ssh.pool-1/ssh:/etc/services-config/ssh \
        -v /etc/services-config/%p/supervisor:/etc/services-config/supervisor \
        -v /etc/services-config/%p/mysql:/etc/services-config/mysql \
        busybox:latest \
        /bin/true; \
    fi; \
  fi"

# Initialisation: Pull or build image if required
ExecStartPre=/bin/sudo /bin/bash -c \
  "if [[ jdeathe/centos-ssh-mysql != $(/usr/bin/docker images | /bin/grep -e '^jdeathe/centos-ssh-mysql[ ]\{1,\}' | /bin/grep -o 'jdeathe/centos-ssh-mysql') ]]; then \
    if [[ -f /var/services-packages/jdeathe/centos-ssh-mysql.centos-6-1.3.0.tar.xz ]]; then \
      /usr/bin/xz -dc /var/services-packages/jdeathe/centos-ssh-mysql.centos-6-1.3.0.tar.xz | /usr/bin/docker load; \
    else \
      /usr/bin/docker pull jdeathe/centos-ssh-mysql:centos-6-1.3.0; \
    fi; \
  fi"

# Startup: Remove existing container (and stop if running) so it is re-created on startup but not removed on exit - to allow debugging if required
ExecStart=/bin/sudo /bin/bash -c \
  "if [[ %p == $(/usr/bin/docker ps -a | /bin/awk -v pattern='^%p$' '$NF ~ pattern { print $NF; }') ]]; then \
    if [[ %p == $(/usr/bin/docker ps | /bin/awk -v pattern='^%p$' '$NF ~ pattern { print $NF; }') ]]; then \
      /usr/bin/docker stop %p; \
    fi; \
    /usr/bin/docker rm %p; \
  fi; \
  if [[ volume-config.%p == $(/usr/bin/docker ps -a | /bin/awk -v pattern='^volume-config.%p$' '$NF ~ pattern { print $NF; }') ]]; then \
    /usr/bin/docker run \
      --name %p \
      -p %i:3306 \
      --volumes-from volume-config.%p \
      -v /var/services-data/mysql/pool-1:/var/lib/mysql \
      jdeathe/centos-ssh-mysql:centos-6-1.3.0; \
  else \
    /usr/bin/docker run \
      --name %p \
      -p %i:3306 \
      -v /var/services-data/mysql/pool-1:/var/lib/mysql \
      jdeathe/centos-ssh-mysql:centos-6-1.3.0; \
  fi"

ExecStartPost=/usr/bin/etcdctl set /services/mysql/pool-1/1.1 %H:%i

ExecStop=/usr/bin/docker stop --time 10 %p
ExecStopPost=/usr/bin/etcdctl rm /services/mysql/pool-1/1.1

[Install]
WantedBy=multi-user.target