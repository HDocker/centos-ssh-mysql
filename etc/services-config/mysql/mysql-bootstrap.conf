#!/usr/bin/env bash

# Used by the bootstrap script to determin if MySQL has been initialised. 
# This value is used if there is no datadir found in the default configuration files.
MYSQL_DATA_DIR_DEFAULT=/var/lib/mysql

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# WARNING: Will destroy data.
# Set to 1 to force initialisation of MySQL tables
# for a clean install and a new auto-generated root password
FORCE_MYSQL_INSTALL=0
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

# A password is automatically generated on initialisation of the MySQL databases.
# Check the error-log for the value (i.e docker logs). This default behavior can
# be overriden and a password specified here.
#MYSQL_ROOT_PASSWORD="root!123"

# Set the time to wait for the MySQL initialisation process.
MYSQL_INIT_LIMIT=${MYSQL_INIT_LIMIT:-30}

# -----------------------------------------------------------------------------
# Custom Application specific setup
# -----------------------------------------------------------------------------
OPT_MYSQL_SUBNET=${MYSQL_SUBNET:-%}

CUSTOM_MYSQL_PASSWORD_APP_1=
OPT_CUSTOM_MYSQL_PASSWORD_APP_1=${CUSTOM_MYSQL_PASSWORD_APP_1:-$(head -n 4096 /dev/urandom | tr -cd '[:alnum:]' | head -c 8)}

# -----------------------------------------------------------------------------
# Custom SQL run once during initialisation of the database tables
# -----------------------------------------------------------------------------
CUSTOM_MYSQL_INIT_SQL="-- Custom Initialisation SQL can be included in ${0}"

## Example initialisation of the "app-1" demo database.
#CUSTOM_MYSQL_INIT_SQL="-- Create custom app database
#CREATE DATABASE \`app-1\`;
#-- Create an application admin account with the neccessary subnet access
#GRANT ALL PRIVILEGES ON \`app-1\`.* TO 'app-admin'@'${OPT_MYSQL_SUBNET}' IDENTIFIED BY '${OPT_CUSTOM_MYSQL_PASSWORD_APP_1}' WITH GRANT OPTION;
#"